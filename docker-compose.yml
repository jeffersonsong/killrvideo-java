version: '3'

#
# docker-compose.yaml
#   Simple compose file for running the Java services in Docker along with other containers comprising the
#   KillrVideo.
#   For more complex configuration options including metrics, external volumes, OpsCenter,
#   etc., see https://github.com/KillrVideo/killrvideo-docker-common
#
#   Note: the default configuration here uses the LATEST version of the killrvideo-python
#   Docker image, which can be built using scripts/docker_build.sh.
#

services:

  web: # Web Interface
    image: killrvideo/killrvideo-web:3.0.1
    ports:
      - "3000:3000" # Exposes port to be available externally
    depends_on:
      - backend # Needs Backend to be running
    environment:
      KILLRVIDEO_LOGGING_LEVEL: debug # More logging
    labels:
      kompose.service.type: nodeport # Adds a label for Kompose to expose service externally

  # Service implementation - use docker-compose-backend-external.yaml if running services in IDE
  backend: # KillrVideo Backend 
    image: killrvideo-java-local:latest
    ports:
      - "50101:50101" # Exposes port to be available. Kompose tool needs that to create a k8s service and make backend available for other services.
    depends_on:
      - dse  # Needs DSE to be running
      - redis
    environment:
      KILLRVIDEO_LOGGING_LEVEL: debug # More logging
      KILLRVIDEO_DSE_CONTACT_POINTS: dse
      KILLRVIDEO_REDIS_CONTACT_POINTS: redis
    labels:
      kompose.service.type: nodeport # Adds a label for Kompose to expose service externally

  # Datastax Studio provides convenient web interface to work directly with DataStax Enterprise
  #studio:
  #  image: datastax/dse-studio:6.7.0
  #  ports:
  #    - "9091:9091" # Exposes port to be available externally
  #  depends_on:
  #    - dse # Needs DSE to be running
  #  environment:
  #    DS_LICENSE: accept

  # DataStax Enterprise Database
  dse: 
    image: datastax/dse-server:6.8.18-1
    command: [ -s -g ] # Run with Search and Graph capabilities enabled
    ports: # Exposes ports to be available.
      - "9042:9042" # Exposes DSE port
      #- "8983:8983" # Exposes DSE Search port
      #- "8182:8182" # Exposes DSE Graph port
    environment:
      DS_LICENSE: accept # Accept licence on start
    cap_add:
      - IPC_LOCK # Allow DSE to lock memory with mlock
    ulimits:
      memlock: -1
    volumes:
      - /home/jeffersons/Tutorial/github.com/KillrVideo/dse2/var/lib/cassandra:/var/lib/cassandra
    labels:
      kompose.service.type: nodeport # Adds a label for Kompose to expose service externally

  # One-Time Bootstrap Container, configures DSE to have required keyspaces etc.
  dse-config: 
    image: killrvideo/killrvideo-dse-config:3
    depends_on:
      - dse # Needs DSE to be running
    restart: on-failure # Kompose needs that to create dse-config as a pod, not a deployment. DSE-Config deployment is not needed as we run it only once.

  # Sample Data Generator, imitates behaviour of users on the killrVideo website. 
  # Adds comments and rates videos, upload new videos and so on.
  #generator:
  #  image: killrvideo/killrvideo-generator:3.0.2
  #  depends_on:
  #    - backend # Needs Backend to be running
  #  environment:
  #    KILLRVIDEO_LOGGING_LEVEL: debug # More logging

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    #volumes:
    #  - ./config/redis.conf:/redis.conf
    #command: [ "redis-server", "/redis.conf" ]
    command: [ "redis-server" ]
