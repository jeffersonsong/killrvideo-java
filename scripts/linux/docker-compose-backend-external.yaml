version: '3'

#
# docker-compose-backend-external.yaml
#   Simple compose file for running containers comprising the KillrVideo application and supporting infrastructure,
#   minus the Backend services, which may be run at the command line or in an IDE using the instructions in the README.
#   For more complex configuration options including metrics, external volumes, OpsCenter,
#   etc., see https://github.com/KillrVideo/killrvideo-docker-common
services:

  web: # Web Interface
    image: killrvideo/killrvideo-web:3.0.1
    ports:
      - "3000:3000" # Exposes port to be available externally
    environment:
      KILLRVIDEO_LOGGING_LEVEL: debug # More logging
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "backend:$KILLRVIDEO_BACKEND"

  # Datastax Studio provides convenient web interface to work directly with DataStax Enterprise
  #studio:
  #  image: datastax/dse-studio:6.7.0
  #  ports:
  #    - "9091:9091" # Exposes port to be available externally
  #  depends_on:
  #    - dse # Needs DSE to be running
  #  environment:
  #    DS_LICENSE: accept

  # DataStax Enterprise Database
  dse: 
    image: datastax/dse-server:6.8.18-1
    command: [ -s -g ] # Run with Search and Graph capabilities enabled
    ports: # Exposes ports to be available.
      - "9042:9042" # Exposes DSE port
      #- "8983:8983" # Exposes DSE Search port # Not in use.
      #- "8182:8182" # Exposes DSE Graph port # Not in use.
    environment:
      DS_LICENSE: accept # Accept licence on start
    cap_add:
      - IPC_LOCK # Allow DSE to lock memory with mlock
    ulimits:
      memlock: -1
    volumes:
      - /home/jeffersons/Tutorial/github.com/KillrVideo/dse2/var/lib/cassandra:/var/lib/cassandra
      #- /Users/jeffersons/Tutorials/github.com/KillrVideo/dse2/var/lib/cassandra:/var/lib/cassandra

  # One-Time Bootstrap Container, configures DSE to have required keyspaces etc.
  #dse-config:
  #  image: killrvideo/killrvideo-dse-config:3.0.0
  #  depends_on:
  #    - dse # Needs DSE to be running

  # Sample Data Generator, imitates behaviour of users on the killrVideo website. 
  # Adds comments and rates videos, upload new videos and so on.
  #generator:
  #  image: killrvideo/killrvideo-generator:3.0.1
  #  environment:
  #    KILLRVIDEO_LOGGING_LEVEL: debug # More logging
  #  extra_hosts:
  #    - "host.docker.internal:host-gateway"
  #    - "backend:$KILLRVIDEO_BACKEND"

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - ./config/redis.conf:/redis.conf
    command: [ "redis-server", "/redis.conf" ]

  # Ensure consistency in Kafka World
  zookeeper:
    image: 'wurstmeister/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes

  # Start the Kafka Engine for Killrvideo
  kafka:
    image: 'wurstmeister/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CREATE_TOPICS="topic-kv-errors:1:1,topic-kv-videoCreation:1:1,topic-kv-userCreation:1:1,topic-kv-videoRating:1:1,topic-kv-commentCreation:1:1"
    depends_on:
      - zookeeper
